package main

import "testing"

func TestSolveBoard1(t *testing.T) {
	board := [][]string{
		{"1", "_", "_", "4", "_", "_", "4", "_", "_", "3"},
		{"2", "_", "_", "2", "_", "_", "2", "_", "_", "4"},
		{"3", "_", "_", "3", "_", "_", "4", "_", "_", "1"},
		{"6", "_", "_", "6", "_", "_", "2", "_", "_", "5"},
		{"_", "4", "_", "_", "1", "_", "_", "5", "_", "_"},
		{"_", "_", "4", "_", "_", "5", "_", "_", "3", "_"},
		{"4", "_", "_", "6", "_", "_", "6", "_", "_", "3"},
		{"4", "_", "_", "4", "_", "_", "5", "_", "_", "1"},
		{"4", "_", "_", "3", "_", "_", "3", "_", "_", "3"},
		{"6", "_", "_", "6", "_", "_", "6", "_", "_", "2"}}

	solvedBoard := solve(board)

	if solvedBoard == nil {
		t.Error("Oh Noes the solved board is nil")
	}
}

func TestSolveBoard2(t *testing.T) {
	board := [][]string{
		{"4", "4", "_", "_", "_", "_", "_", "_", "_", "_"},
		{"3", "3", "_", "_", "4", "4", "_", "_", "_", "_"},
		{"2", "4", "_", "_", "3", "2", "_", "_", "2", "4"},
		{"_", "_", "_", "_", "4", "4", "_", "_", "4", "3"},
		{"_", "_", "_", "_", "_", "_", "_", "_", "1", "3"},
		{"3", "4", "_", "_", "_", "_", "_", "_", "_", "_"},
		{"1", "2", "_", "_", "2", "4", "_", "_", "_", "_"},
		{"4", "3", "_", "_", "3", "2", "_", "_", "2", "3"},
		{"_", "_", "_", "_", "4", "3", "_", "_", "3", "3"},
		{"_", "_", "_", "_", "_", "_", "_", "_", "4", "4"}}

	solvedBoard := solve(board)

	if solvedBoard == nil {
		t.Error("Oh Noes the solved board is nil")
	}
}

func TestSolveBoard3(t *testing.T) {
	board := [][]string{
		{"8", "_", "1", "_", "_", "_", "1", "_", "_", "_"},
		{"2", "_", "_", "_", "1", "_", "2", "6", "5", "_"},
		{"_", "4", "2", "1", "_", "_", "_", "7", "_", "_"},
		{"_", "_", "_", "_", "_", "_", "2", "_", "_", "1"},
		{"_", "3", "_", "_", "4", "_", "_", "_", "1", "4"},
		{"2", "2", "_", "_", "_", "1", "_", "_", "4", "_"},
		{"1", "_", "_", "3", "_", "_", "_", "_", "_", "_"},
		{"_", "_", "3", "_", "_", "_", "1", "6", "2", "_"},
		{"_", "2", "2", "1", "_", "3", "_", "_", "_", "3"},
		{"_", "_", "_", "8", "_", "_", "_", "6", "_", "5"}}

	solvedBoard := solve(board)

	if solvedBoard == nil {
		t.Error("Oh Noes the solved board is nil")
	}
}
